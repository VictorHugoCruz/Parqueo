// Generated by view binder compiler. Do not edit!
package com.victorcruz.parking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.victorcruz.parking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistroBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText Rconfpass;

  @NonNull
  public final TextInputEditText Rpass;

  @NonNull
  public final TextInputLayout Ruser;

  @NonNull
  public final TextInputEditText Rusuario;

  @NonNull
  public final Button btnRegistro;

  @NonNull
  public final TextInputLayout confPassword;

  @NonNull
  public final TextInputLayout password;

  @NonNull
  public final TextView txtInicio;

  private ActivityRegistroBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText Rconfpass, @NonNull TextInputEditText Rpass,
      @NonNull TextInputLayout Ruser, @NonNull TextInputEditText Rusuario,
      @NonNull Button btnRegistro, @NonNull TextInputLayout confPassword,
      @NonNull TextInputLayout password, @NonNull TextView txtInicio) {
    this.rootView = rootView;
    this.Rconfpass = Rconfpass;
    this.Rpass = Rpass;
    this.Ruser = Ruser;
    this.Rusuario = Rusuario;
    this.btnRegistro = btnRegistro;
    this.confPassword = confPassword;
    this.password = password;
    this.txtInicio = txtInicio;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Rconfpass;
      TextInputEditText Rconfpass = rootView.findViewById(id);
      if (Rconfpass == null) {
        break missingId;
      }

      id = R.id.Rpass;
      TextInputEditText Rpass = rootView.findViewById(id);
      if (Rpass == null) {
        break missingId;
      }

      id = R.id.Ruser;
      TextInputLayout Ruser = rootView.findViewById(id);
      if (Ruser == null) {
        break missingId;
      }

      id = R.id.Rusuario;
      TextInputEditText Rusuario = rootView.findViewById(id);
      if (Rusuario == null) {
        break missingId;
      }

      id = R.id.btnRegistro;
      Button btnRegistro = rootView.findViewById(id);
      if (btnRegistro == null) {
        break missingId;
      }

      id = R.id.confPassword;
      TextInputLayout confPassword = rootView.findViewById(id);
      if (confPassword == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputLayout password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.txtInicio;
      TextView txtInicio = rootView.findViewById(id);
      if (txtInicio == null) {
        break missingId;
      }

      return new ActivityRegistroBinding((ConstraintLayout) rootView, Rconfpass, Rpass, Ruser,
          Rusuario, btnRegistro, confPassword, password, txtInicio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
